@using Localization.Resources.AbpUi
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.MultiTenancy
@using Volo.Abp.UI.Navigation
@using Volo.Abp.Users
@inject ICurrentUser CurrentUser
@inject ICurrentTenant CurrentTenant
@inject IHtmlLocalizer<AbpUiResource> L
@model ApplicationMenu

<div class="dropdown drp-user">
    <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        <i class="icon color-white feather icon-settings"></i>
    </a>
                        <div class="dropdown-menu dropdown-menu-right profile-notification">
                            <div class="pro-head">
                                <img src="~/themes/images/user/avatar-2.jpg" class="img-radius" alt="User-Profile-Image">
                                <span>
                                        @if (CurrentUser.TenantId != null)
                                        {
                                            <small><i>@CurrentTenant.Name</i>\</small>@CurrentUser.UserName 
                                        }
                                        else
                                        {
                                            @CurrentUser.UserName
                                        }
                                </span>
                                <a href="/Account/Logout" class="dud-logout" title="Logout">
                                    <i class="feather icon-log-out"></i>
                                </a>
                            </div>
                            <ul class="pro-body">
                                @foreach (var menuItem in Model.Items)
                                 {
                                        var elementId = string.IsNullOrEmpty(menuItem.ElementId) ? string.Empty : $"id=\"{menuItem.ElementId}\"";
                                        var cssClass = string.IsNullOrEmpty(menuItem.CssClass) ? string.Empty : menuItem.CssClass;
                                        var disabled = menuItem.IsDisabled ? "disabled" : string.Empty;
                                        var url = string.IsNullOrEmpty(menuItem.Url) ? "#" : Url.Content(menuItem.Url);
                                <li>
                                    <a class="dropdown-item @cssClass @disabled" href="@url" target="@menuItem.Target" @Html.Raw(elementId)>
                                        @if (menuItem.Icon != null)
                                        {
                                            if (menuItem.Icon.StartsWith("fa"))
                                            {
                                                <i class="@menuItem.Icon"></i>
                                            }
                                        }
                                        @menuItem.DisplayName
                                    </a>

                                </li>
                                }
                            </ul>
                        </div>

</div>
